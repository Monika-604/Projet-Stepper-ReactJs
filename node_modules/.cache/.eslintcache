[{"/Users/monika/Desktop/React/Test-react/Hiring-test-react/src/index.js":"1","/Users/monika/Desktop/React/Test-react/Hiring-test-react/src/App.js":"2","/Users/monika/Desktop/React/Test-react/Hiring-test-react/src/components/Frame.js":"3","/Users/monika/Desktop/React/Test-react/Hiring-test-react/src/Api/stepsApi.js":"4","/Users/monika/Desktop/React/Test-react/Hiring-test-react/src/components/Steps.js":"5","/Users/monika/Desktop/React/Test-react/Hiring-test-react/src/context/index.js":"6","/Users/monika/Desktop/React/Test-react/Hiring-test-react/src/components/Step.js":"7","/Users/monika/Desktop/React/Test-react/Hiring-test-react/src/context/CurrentContext.js":"8","/Users/monika/Desktop/React/Test-react/Hiring-test-react/src/context/StepsContext.js":"9","/Users/monika/Desktop/React/Test-react/Hiring-test-react/src/context/SelectedContext.js":"10"},{"size":199,"mtime":1624300073187,"results":"11","hashOfConfig":"12"},{"size":1438,"mtime":1624475563283,"results":"13","hashOfConfig":"12"},{"size":2139,"mtime":1624484453167,"results":"14","hashOfConfig":"12"},{"size":1000,"mtime":1624310674641,"results":"15","hashOfConfig":"12"},{"size":1124,"mtime":1624484543390,"results":"16","hashOfConfig":"12"},{"size":200,"mtime":1624387737672,"results":"17","hashOfConfig":"12"},{"size":1540,"mtime":1624484598181,"results":"18","hashOfConfig":"12"},{"size":82,"mtime":1624387724976,"results":"19","hashOfConfig":"12"},{"size":79,"mtime":1624387756161,"results":"20","hashOfConfig":"12"},{"size":82,"mtime":1624386596939,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3yax7l",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/monika/Desktop/React/Test-react/Hiring-test-react/src/index.js",[],"/Users/monika/Desktop/React/Test-react/Hiring-test-react/src/App.js",["46"],"\nimport { useState,useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Steps from \"./components/Steps\"\nimport Frame from \"./components/Frame\"\n\nimport stepsApi from \"./Api/stepsApi\"\nimport {StepsContext ,CurrentContext, SelectedContext} from './context';\n\n\n\nexport default function App () {\n\n    const [steps,setSteps] = useState(stepsApi.steps)\n    const [selectedStep,setSelectedStep] = useState(steps[0].id)\n    const [currentStep ,setCurrentStep]= useState(\"\")\n    \n    useEffect(() => {\n        steps.map((item,index)=>{\n            if(item.completed===false && steps[index-1].completed===true){\n                setCurrentStep(item.id)\n            }\n        })\n    }, [steps])\n  \n\n\n    return(\n        <StepsContext.Provider \n                value={[steps,setSteps]}>\n             <SelectedContext.Provider\n                    value={[selectedStep,setSelectedStep]}> \n                <CurrentContext.Provider\n                    value={[currentStep ,setCurrentStep]}>  \n                    <div>\n                        <div className=\"container \">\n                            <div className=\"row \">\n                                <Steps />\n                                <Frame />\n                            </div>\n                        </div>\n                    </div>\n                </CurrentContext.Provider>\n            </SelectedContext.Provider>\n        </StepsContext.Provider>\n    )\n}\n\n\n\n\n","/Users/monika/Desktop/React/Test-react/Hiring-test-react/src/components/Frame.js",["47","48","49","50","51"],"import { useState, useContext, useEffect } from \"react\"\nimport {StepsContext,CurrentContext,SelectedContext }from \"./../context\"\n\nconst  Frame = () => {\n\n    \n    const [steps,setSteps]=useContext(StepsContext)\n    const [selectedStep,setSelectedStep]=useContext(SelectedContext)\n    const [currentStep,setCurrntStep]=useContext(CurrentContext)\n    const [setpFrame,setStepFrame]=useState(\"\")\n\n    const completedHandler =()=>{\n        \n        const newSteps= steps.map(item=>{\n                if(item.id == currentStep){\n                    const targetStep={\n                        ...item,\n                        completed:true\n                    }\n                    return targetStep\n                }\n                return item\n            })\n        setSteps(newSteps)\n        \n           console.log(newSteps);\n           \n    }\n\n    useEffect(() => {\n        steps.map((item,index)=>{\n            if(item.id===selectedStep){\n                if(item.completed){\n                    setStepFrame(\"Completed\")\n                }else if(item.id == currentStep){\n                    setStepFrame(\"Current\")\n                }\n                else{\n                    setStepFrame(\"Forbidden\")\n                }\n            }\n        })\n    },)\n\n        return(\n            <div className=\" ms-3 col-7 d-flex flex-column justify-content-center rounded frame\">\n                {\n                    setpFrame===\"Completed\"\n                    ? <h3 className=\"h-25 text-center text-dark\">You have done this step already.</h3>\n                    : setpFrame===\"Current\"\n                    ? <button className=\"btn btn-success align-self-center px-3 py-2\" onClick={completedHandler}>complete</button>\n                    : <div className=\"d-flex flex-column justify-content-center \">\n                            <h3 className=\" text-center text-secondary\">Please do the previous Steps!</h3>\n                            <button className=\"btn btn-success align-self-center mt-5  px-3 py-2\" disabled>complete</button>\n                     </div>\n                }\n            </div>\n        )\n    \n   \n       \n\n}\nexport  default Frame","/Users/monika/Desktop/React/Test-react/Hiring-test-react/src/Api/stepsApi.js",[],"/Users/monika/Desktop/React/Test-react/Hiring-test-react/src/components/Steps.js",["52","53"],"import {useState,useContext} from \"react\"\nimport \"./steps.css\"\nimport {StepsContext }from \"./../context\"\n\nimport Step from \"./Step\";\n\nconst Steps = () => {\n  \n    const [steps,setSteps]=useContext(StepsContext)\n\n    return(\n                <div className=\"col-4 steps me-4\">    \n                    <div className=\"side-content\">\n                        <div className=\"bs-vertical-wizard\">\n                            {\n                                steps.map( (item ,index)=> (\n                                    <Step\n                                        key={item.id}\n                                        id={item.id}\n                                        label={item.title}\n                                        chronology={item.chronology}\n                                        status={item.completed}\n                                    />\n                                ))\n                            }\n                        </div>\n                    </div>\n\n                    <div className=\"col-sm-8 col-md-9\">\n                    </div>\n\n                </div>\n\n    )\n}\n\nexport  default Steps","/Users/monika/Desktop/React/Test-react/Hiring-test-react/src/context/index.js",[],"/Users/monika/Desktop/React/Test-react/Hiring-test-react/src/components/Step.js",["54","55","56","57","58","59"],"import {useContext} from \"react\"\nimport {SelectedContext,CurrentContext }from \"./../context\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck} from '@fortawesome/free-solid-svg-icons'\nimport { faLock } from '@fortawesome/free-solid-svg-icons'\nimport { faExclamation} from '@fortawesome/free-solid-svg-icons'\n\nconst  Step = ({id,status,label,chronology,current,selected}) => {\n   \n    const [selectedStep,setSelectedStep]=useContext(SelectedContext)\n    const [currentStep,setCurrntStep]=useContext(CurrentContext)\n\n    return(\n            <div className={`prev-step step\n                                ${status ? \"complete\" :\"\" } \n                                ${id== currentStep ? \"current\" : \"\"}  \n                            `} \n                onClick={()=>setSelectedStep(id)}\n            >\n                <div>\n                \n                    <FontAwesomeIcon \n                        icon={status? faCheck : id== currentStep ? faExclamation: faLock} \n                        className={`ico ${status? \"ico-green\" : id== currentStep ? \"ico-yellow\": \"ico-muted\"} `}\n                        />\n                    <span className={`text-secondary label\n                                        ${ (status || id == currentStep ) ? \"font-weight-bolder text-dark\" :\"\" }\n                                        ${ id==selectedStep ? \"shadow\" : \"\"}\n                                    `} > \n                    {label}</span>\n                </div>\n            </div>\n        )\n}\nexport  default Step","/Users/monika/Desktop/React/Test-react/Hiring-test-react/src/context/CurrentContext.js",[],"/Users/monika/Desktop/React/Test-react/Hiring-test-react/src/context/StepsContext.js",[],"/Users/monika/Desktop/React/Test-react/Hiring-test-react/src/context/SelectedContext.js",[],{"ruleId":"60","severity":1,"message":"61","line":20,"column":31,"nodeType":"62","messageId":"63","endLine":20,"endColumn":33},{"ruleId":"64","severity":1,"message":"65","line":8,"column":25,"nodeType":"66","messageId":"67","endLine":8,"endColumn":40},{"ruleId":"64","severity":1,"message":"68","line":9,"column":24,"nodeType":"66","messageId":"67","endLine":9,"endColumn":37},{"ruleId":"69","severity":1,"message":"70","line":15,"column":28,"nodeType":"71","messageId":"72","endLine":15,"endColumn":30},{"ruleId":"60","severity":1,"message":"61","line":31,"column":31,"nodeType":"62","messageId":"63","endLine":31,"endColumn":33},{"ruleId":"69","severity":1,"message":"70","line":35,"column":34,"nodeType":"71","messageId":"72","endLine":35,"endColumn":36},{"ruleId":"64","severity":1,"message":"73","line":1,"column":9,"nodeType":"66","messageId":"67","endLine":1,"endColumn":17},{"ruleId":"64","severity":1,"message":"74","line":9,"column":18,"nodeType":"66","messageId":"67","endLine":9,"endColumn":26},{"ruleId":"64","severity":1,"message":"68","line":11,"column":24,"nodeType":"66","messageId":"67","endLine":11,"endColumn":37},{"ruleId":"69","severity":1,"message":"70","line":16,"column":37,"nodeType":"71","messageId":"72","endLine":16,"endColumn":39},{"ruleId":"69","severity":1,"message":"70","line":23,"column":51,"nodeType":"71","messageId":"72","endLine":23,"endColumn":53},{"ruleId":"69","severity":1,"message":"70","line":24,"column":67,"nodeType":"71","messageId":"72","endLine":24,"endColumn":69},{"ruleId":"69","severity":1,"message":"70","line":27,"column":58,"nodeType":"71","messageId":"72","endLine":27,"endColumn":60},{"ruleId":"69","severity":1,"message":"70","line":28,"column":46,"nodeType":"71","messageId":"72","endLine":28,"endColumn":48},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'setSelectedStep' is assigned a value but never used.","Identifier","unusedVar","'setCurrntStep' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'setSteps' is assigned a value but never used."]