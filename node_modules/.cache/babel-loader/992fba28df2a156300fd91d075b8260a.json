{"ast":null,"code":"import _slicedToArray from\"/Users/monika/Desktop/stepper-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useContext}from\"react\";import{SelectedContext,CurrentContext}from\"./../context\";import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCheck}from'@fortawesome/free-solid-svg-icons';import{faLock}from'@fortawesome/free-solid-svg-icons';import{faExclamation}from'@fortawesome/free-solid-svg-icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Step=function Step(_ref){var id=_ref.id,status=_ref.status,label=_ref.label,chronology=_ref.chronology,current=_ref.current,selected=_ref.selected;var _useContext=useContext(SelectedContext),_useContext2=_slicedToArray(_useContext,2),selectedStep=_useContext2[0],setSelectedStep=_useContext2[1];var _useContext3=useContext(CurrentContext),_useContext4=_slicedToArray(_useContext3,2),currentStep=_useContext4[0],setCurrntStep=_useContext4[1];return/*#__PURE__*/_jsx(\"div\",{className:\"prev-step step\\n                                \".concat(status?\"complete\":\"\",\" \\n                                \").concat(id==currentStep?\"current\":\"\",\"  \\n                            \"),onClick:function onClick(){return setSelectedStep(id);},children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:status?faCheck:id==currentStep?faExclamation:faLock,className:\"ico \".concat(status?\"ico-green\":id==currentStep?\"ico-yellow\":\"ico-muted\",\" \")}),/*#__PURE__*/_jsx(\"span\",{className:\"text-secondary label\\n                                        \".concat(status||id==currentStep?\"font-weight-bolder text-dark\":\"\",\"\\n                                        \").concat(id==selectedStep?\"shadow\":\"\",\"\\n                                    \"),children:label})]})});};export default Step;","map":{"version":3,"sources":["/Users/monika/Desktop/stepper-react/src/components/Step.js"],"names":["useContext","SelectedContext","CurrentContext","FontAwesomeIcon","faCheck","faLock","faExclamation","Step","id","status","label","chronology","current","selected","selectedStep","setSelectedStep","currentStep","setCurrntStep"],"mappings":"0JAAA,OAAQA,UAAR,KAAyB,OAAzB,CACA,OAAQC,eAAR,CAAwBC,cAAxB,KAA6C,cAA7C,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,OAAT,KAAuB,mCAAvB,CACA,OAASC,MAAT,KAAuB,mCAAvB,CACA,OAASC,aAAT,KAA6B,mCAA7B,C,wFAEA,GAAOC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAmD,IAAjDC,CAAAA,EAAiD,MAAjDA,EAAiD,CAA9CC,MAA8C,MAA9CA,MAA8C,CAAvCC,KAAuC,MAAvCA,KAAuC,CAAjCC,UAAiC,MAAjCA,UAAiC,CAAtBC,OAAsB,MAAtBA,OAAsB,CAAdC,QAAc,MAAdA,QAAc,CAE7D,gBAAqCb,UAAU,CAACC,eAAD,CAA/C,4CAAOa,YAAP,iBAAoBC,eAApB,iBACA,iBAAkCf,UAAU,CAACE,cAAD,CAA5C,6CAAOc,WAAP,iBAAmBC,aAAnB,iBAEA,mBACQ,YAAK,SAAS,2DACQR,MAAM,CAAG,UAAH,CAAe,EAD7B,+CAEQD,EAAE,EAAGQ,WAAL,CAAmB,SAAnB,CAA+B,EAFvC,oCAAd,CAII,OAAO,CAAE,yBAAID,CAAAA,eAAe,CAACP,EAAD,CAAnB,EAJb,uBAMI,oCAEI,KAAC,eAAD,EACI,IAAI,CAAEC,MAAM,CAAEL,OAAF,CAAYI,EAAE,EAAGQ,WAAL,CAAmBV,aAAnB,CAAkCD,MAD9D,CAEI,SAAS,eAASI,MAAM,CAAE,WAAF,CAAgBD,EAAE,EAAGQ,WAAL,CAAmB,YAAnB,CAAiC,WAAhE,KAFb,EAFJ,cAMI,aAAM,SAAS,yEACSP,MAAM,EAAID,EAAE,EAAIQ,WAAjB,CAAiC,8BAAjC,CAAiE,EADzE,sDAEQR,EAAE,EAAEM,YAAJ,CAAmB,QAAnB,CAA8B,EAFtC,0CAAf,UAICJ,KAJD,EANJ,GANJ,EADR,CAqBH,CA1BD,CA2BA,cAAgBH,CAAAA,IAAhB","sourcesContent":["import {useContext} from \"react\"\nimport {SelectedContext,CurrentContext }from \"./../context\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck} from '@fortawesome/free-solid-svg-icons'\nimport { faLock } from '@fortawesome/free-solid-svg-icons'\nimport { faExclamation} from '@fortawesome/free-solid-svg-icons'\n\nconst  Step = ({id,status,label,chronology,current,selected}) => {\n   \n    const [selectedStep,setSelectedStep]=useContext(SelectedContext)\n    const [currentStep,setCurrntStep]=useContext(CurrentContext)\n\n    return(\n            <div className={`prev-step step\n                                ${status ? \"complete\" :\"\" } \n                                ${id== currentStep ? \"current\" : \"\"}  \n                            `} \n                onClick={()=>setSelectedStep(id)}\n            >\n                <div>\n                \n                    <FontAwesomeIcon \n                        icon={status? faCheck : id== currentStep ? faExclamation: faLock} \n                        className={`ico ${status? \"ico-green\" : id== currentStep ? \"ico-yellow\": \"ico-muted\"} `}\n                        />\n                    <span className={`text-secondary label\n                                        ${ (status || id == currentStep ) ? \"font-weight-bolder text-dark\" :\"\" }\n                                        ${ id==selectedStep ? \"shadow\" : \"\"}\n                                    `} > \n                    {label}</span>\n                </div>\n            </div>\n        )\n}\nexport  default Step"]},"metadata":{},"sourceType":"module"}