{"ast":null,"code":"var _jsxFileName = \"/Users/monika/Desktop/test/src/components/Frame.js\",\n    _s = $RefreshSig$();\n\nimport { ususeContext, useEffect } from \"react\";\nimport { StepsContext, CurrentContext, SelectedContext } from \"./../context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Frame = ({\n  id\n}) => {\n  _s();\n\n  const [steps, setSteps] = useContext(StepsContext);\n  const [selectedStep, setSelectedStep] = useContext(SelectedContext);\n  const [currentStep, setCurrntStep] = useContext(CurrentContext);\n  const [setpFrame, setStepFrame] = useState(\"\");\n\n  const completedHandler = () => {\n    const targetStep = steps.filter(item => item.id = id);\n    targetStep.completed = true;\n    const newSteps = steps.filter(item => item.id != id);\n    setSteps([...newSteps, ...targetStep]);\n  };\n\n  useEffect(() => {\n    steps.map((item, index) => {\n      if (item.id === selectedStep) {\n        if (item.completed) {\n          setStepFrame(\"Completed\");\n        } else if (item.id == currentStep) {\n          setStepFrame(\"Current\");\n        } else {\n          setStepFrame(\"Forbidden\");\n        }\n      }\n    });\n  }, [steps]);\n\n  if (setpFrame == \"Completed\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border border-dark col-8 d-flex justify-content-center align-item-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"This Step is Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  } else if (setpFrame == \"Current\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border border-dark col-8 d-flex justify-content-center align-item-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger align-self-center\",\n        onClick: completedHandler,\n        children: \"complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this);\n  } else if (setpFrame == \"Forbidden\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border border-dark col-8 d-flex justify-content-center align-item-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You must do previous Steps!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border border-dark col-8 d-flex justify-content-center align-item-center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this);\n  }\n};\n\n_s(Frame, \"hJLT2kEf7BSf3PzNo6jpGl9qz04=\");\n\n_c = Frame;\nexport default Frame;\n\nvar _c;\n\n$RefreshReg$(_c, \"Frame\");","map":{"version":3,"sources":["/Users/monika/Desktop/test/src/components/Frame.js"],"names":["ususeContext","useEffect","StepsContext","CurrentContext","SelectedContext","Frame","id","steps","setSteps","useContext","selectedStep","setSelectedStep","currentStep","setCurrntStep","setpFrame","setStepFrame","useState","completedHandler","targetStep","filter","item","completed","newSteps","map","index"],"mappings":";;;AAAA,SAASA,YAAT,EAAuBC,SAAvB,QAAwC,OAAxC;AACA,SAAQC,YAAR,EAAqBC,cAArB,EAAoCC,eAApC,QAA0D,cAA1D;;;AAEA,MAAOC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAU;AAAA;;AAGrB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBC,UAAU,CAACP,YAAD,CAAjC;AACA,QAAM,CAACQ,YAAD,EAAcC,eAAd,IAA+BF,UAAU,CAACL,eAAD,CAA/C;AACA,QAAM,CAACQ,WAAD,EAAaC,aAAb,IAA4BJ,UAAU,CAACN,cAAD,CAA5C;AACA,QAAM,CAACW,SAAD,EAAWC,YAAX,IAAyBC,QAAQ,CAAC,EAAD,CAAvC;;AAEA,QAAMC,gBAAgB,GAAE,MAAI;AACrB,UAAMC,UAAU,GAAGX,KAAK,CAACY,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACd,EAAL,GAASA,EAA9B,CAAnB;AACAY,IAAAA,UAAU,CAACG,SAAX,GAAqB,IAArB;AACA,UAAMC,QAAQ,GAAEf,KAAK,CAACY,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACd,EAAL,IAAWA,EAAhC,CAAhB;AACAE,IAAAA,QAAQ,CAAC,CAAC,GAAGc,QAAJ,EAAa,GAAGJ,UAAhB,CAAD,CAAR;AACN,GALD;;AAOAjB,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACgB,GAAN,CAAU,CAACH,IAAD,EAAMI,KAAN,KAAc;AACpB,UAAGJ,IAAI,CAACd,EAAL,KAAUI,YAAb,EAA0B;AACtB,YAAGU,IAAI,CAACC,SAAR,EAAkB;AACdN,UAAAA,YAAY,CAAC,WAAD,CAAZ;AACH,SAFD,MAEM,IAAGK,IAAI,CAACd,EAAL,IAAWM,WAAd,EAA0B;AAC5BG,UAAAA,YAAY,CAAC,SAAD,CAAZ;AACH,SAFK,MAGF;AACAA,UAAAA,YAAY,CAAC,WAAD,CAAZ;AACH;AACJ;AACJ,KAXD;AAYH,GAbQ,EAaN,CAACR,KAAD,CAbM,CAAT;;AAgBA,MAAGO,SAAS,IAAE,WAAd,EAA0B;AACtB,wBACI;AAAK,MAAA,SAAS,EAAC,0EAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND,MAMM,IAAGA,SAAS,IAAE,SAAd,EAAwB;AACtB,wBACI;AAAK,MAAA,SAAS,EAAC,0EAAf;AAAA,6BACI;AAAQ,QAAA,SAAS,EAAC,kCAAlB;AAAqD,QAAA,OAAO,EAAEG,gBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKP,GANK,MAMA,IAAGH,SAAS,IAAE,WAAd,EAA0B;AACxB,wBACI;AAAK,MAAA,SAAS,EAAC,0EAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKP,GANK,MAMD;AACG,wBACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ;AAKJ;AAEP,CAzDD;;GAAOT,K;;KAAAA,K;AA0DP,eAAgBA,KAAhB","sourcesContent":["import { ususeContext, useEffect } from \"react\"\nimport {StepsContext,CurrentContext,SelectedContext }from \"./../context\"\n\nconst  Frame = ({id}) => {\n\n    \n    const [steps,setSteps]=useContext(StepsContext)\n    const [selectedStep,setSelectedStep]=useContext(SelectedContext)\n    const [currentStep,setCurrntStep]=useContext(CurrentContext)\n    const [setpFrame,setStepFrame]=useState(\"\")\n\n    const completedHandler =()=>{\n           const targetStep = steps.filter(item => item.id= id) \n           targetStep.completed=true\n           const newSteps= steps.filter(item => item.id != id)\n           setSteps([...newSteps,...targetStep])\n    }\n\n    useEffect(() => {\n        steps.map((item,index)=>{\n            if(item.id===selectedStep){\n                if(item.completed){\n                    setStepFrame(\"Completed\")\n                }else if(item.id == currentStep){\n                    setStepFrame(\"Current\")\n                }\n                else{\n                    setStepFrame(\"Forbidden\")\n                }\n            }\n        })\n    }, [steps])\n\n   \n    if(setpFrame==\"Completed\"){\n        return(\n            <div className=\"border border-dark col-8 d-flex justify-content-center align-item-center\">\n                <h1>This Step is Completed!</h1>\n            </div>\n        )\n    }else if(setpFrame==\"Current\"){\n            return(\n                <div className=\"border border-dark col-8 d-flex justify-content-center align-item-center\">\n                    <button className=\"btn btn-danger align-self-center\" onClick={completedHandler}>complete</button>\n                </div>\n            )\n    }else if(setpFrame==\"Forbidden\"){\n            return(\n                <div className=\"border border-dark col-8 d-flex justify-content-center align-item-center\">\n                    <h1>You must do previous Steps!</h1>\n                </div>\n            )\n    }else{\n            return(\n                <div className=\"border border-dark col-8 d-flex justify-content-center align-item-center\">\n                    \n                </div>\n            )\n       }\n\n}\nexport  default Frame"]},"metadata":{},"sourceType":"module"}